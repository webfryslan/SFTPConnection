// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sftpconnection.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the SFTPConnection module
	public static boolean bCo_DenyCommitWithoutEvents(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.BCo_DenyCommitWithoutEvents").withParams(params).execute(context);
	}
	public static java.util.List<sftpconnection.proxies.SFTPFileDocument> dS_GetDocumentList(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("SFTPConnection.DS_GetDocumentList").withParams(params).execute(context);
		java.util.List<sftpconnection.proxies.SFTPFileDocument> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(sftpconnection.proxies.SFTPFileDocument.initialize(context, obj));
		}
		return result;
	}
	public static sftpconnection.proxies.PublicKey dS_GetOrCreatePublicKey(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTPConnection.DS_GetOrCreatePublicKey").withParams(params).execute(context);
		return result == null ? null : sftpconnection.proxies.PublicKey.initialize(context, result);
	}
	public static void iVK_DownloadFile(IContext context, sftpconnection.proxies.SFTPFileDocument _sFTPFileDocument)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPFileDocument", _sFTPFileDocument == null ? null : _sFTPFileDocument.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_DownloadFile").withParams(params).execute(context);
	}
	public static void iVK_KnownHosts_SetStatusValidated(IContext context, sftpconnection.proxies.KnownHosts _knownHosts)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("KnownHosts", _knownHosts == null ? null : _knownHosts.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_KnownHosts_SetStatusValidated").withParams(params).execute(context);
	}
	public static void iVK_PassPhraseEntry_ConfirmNewKeyPair(IContext context, sftpconnection.proxies.PassPhraseEntry _passPhraseEntry)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PassPhraseEntry", _passPhraseEntry == null ? null : _passPhraseEntry.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_PassPhraseEntry_ConfirmNewKeyPair").withParams(params).execute(context);
	}
	public static void iVK_PassPhraseEntry_GenerateKeyPair(IContext context, sftpconnection.proxies.PassPhraseEntry _passPhraseEntry)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PassPhraseEntry", _passPhraseEntry == null ? null : _passPhraseEntry.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_PassPhraseEntry_GenerateKeyPair").withParams(params).execute(context);
	}
	public static void iVK_SendFile(IContext context, system.proxies.FileDocument _fileDocument)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("FileDocument", _fileDocument == null ? null : _fileDocument.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_SendFile").withParams(params).execute(context);
	}
	public static void iVK_SFTPConfiguration_CreateSFTPConfiguration(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("SFTPConnection.IVK_SFTPConfiguration_CreateSFTPConfiguration").withParams(params).execute(context);
	}
	public static void iVK_SFTPConfiguration_DeleteSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_SFTPConfiguration_DeleteSFTPConfiguration").withParams(params).execute(context);
	}
	public static void iVK_SFTPConfiguration_SaveSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_SFTPConfiguration_SaveSFTPConfiguration").withParams(params).execute(context);
	}
	public static void iVK_SFTPConfiguration_SetKnownHosts(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_SFTPConfiguration_SetKnownHosts").withParams(params).execute(context);
	}
	public static void iVK_SFTPConnection_CreatePassPhraseEntry(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		Core.microflowCall("SFTPConnection.IVK_SFTPConnection_CreatePassPhraseEntry").withParams(params).execute(context);
	}
	public static boolean passPhraseEntry_GenerateKeyPair(IContext context, sftpconnection.proxies.PassPhraseEntry _passPhraseEntry)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PassPhraseEntry", _passPhraseEntry == null ? null : _passPhraseEntry.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.PassPhraseEntry_GenerateKeyPair").withParams(params).execute(context);
	}
	public static sftpconnection.proxies.PrivateKey privateKey_GetOrCreatePrivateKey(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTPConnection.PrivateKey_GetOrCreatePrivateKey").withParams(params).execute(context);
		return result == null ? null : sftpconnection.proxies.PrivateKey.initialize(context, result);
	}
	public static sftpconnection.proxies.SFTPConfiguration sFTPConfiguration_CreateSFTPConfiguration(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTPConnection.SFTPConfiguration_CreateSFTPConfiguration").withParams(params).execute(context);
		return result == null ? null : sftpconnection.proxies.SFTPConfiguration.initialize(context, result);
	}
	public static system.proxies.FileDocument sFTPConfiguration_GetDocument(IContext context, sftpconnection.proxies.SFTPFileDocument _sFTPFileDocument, java.lang.String _sFTPConfigurationName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPFileDocument", _sFTPFileDocument == null ? null : _sFTPFileDocument.getMendixObject());
		params.put("SFTPConfigurationName", _sFTPConfigurationName);
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTPConnection.SFTPConfiguration_GetDocument").withParams(params).execute(context);
		return result == null ? null : system.proxies.FileDocument.initialize(context, result);
	}
	public static java.util.List<sftpconnection.proxies.SFTPFileDocument> sFTPConfiguration_GetDocumentList(IContext context, java.lang.String _sFTPConfigurationName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfigurationName", _sFTPConfigurationName);
		java.util.List<IMendixObject> objs = Core.microflowCall("SFTPConnection.SFTPConfiguration_GetDocumentList").withParams(params).execute(context);
		java.util.List<sftpconnection.proxies.SFTPFileDocument> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(sftpconnection.proxies.SFTPFileDocument.initialize(context, obj));
		}
		return result;
	}
	public static sftpconnection.proxies.SFTPConfiguration sFTPConfiguration_GetValidSFTPConfiguration(IContext context, java.lang.String _configurationName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ConfigurationName", _configurationName);
		IMendixObject result = (IMendixObject)Core.microflowCall("SFTPConnection.SFTPConfiguration_GetValidSFTPConfiguration").withParams(params).execute(context);
		return result == null ? null : sftpconnection.proxies.SFTPConfiguration.initialize(context, result);
	}
	public static boolean sFTPConfiguration_SaveSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.SFTPConfiguration_SaveSFTPConfiguration").withParams(params).execute(context);
	}
	public static boolean sFTPConfiguration_SendDocument(IContext context, system.proxies.FileDocument _fileDocument, java.lang.String _sFTPConfigurationName)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("FileDocument", _fileDocument == null ? null : _fileDocument.getMendixObject());
		params.put("SFTPConfigurationName", _sFTPConfigurationName);
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.SFTPConfiguration_SendDocument").withParams(params).execute(context);
	}
	public static boolean sFTPConfiguration_SetKnownHosts(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.SFTPConfiguration_SetKnownHosts").withParams(params).execute(context);
	}
	public static boolean sFTPConfiguration_ValidateContentSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration, boolean _validateKnownHosts)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		params.put("ValidateKnownHosts", _validateKnownHosts);
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.SFTPConfiguration_ValidateContentSFTPConfiguration").withParams(params).execute(context);
	}
	public static boolean sFTPConfiguration_ValidateProcessSFTPConfiguration(IContext context, sftpconnection.proxies.SFTPConfiguration _sFTPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("SFTPConfiguration", _sFTPConfiguration == null ? null : _sFTPConfiguration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("SFTPConnection.SFTPConfiguration_ValidateProcessSFTPConfiguration").withParams(params).execute(context);
	}
}